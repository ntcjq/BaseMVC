<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    	http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
    	http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    ">
    
    <!-- 两个数据源的公用配置，方便下面直接引用 -->
	<bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
	      destroy-method="close">
	    <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
	    <property name="poolSize" value="10" />
	    <property name="minPoolSize" value="10"/>
	    <property name="maxPoolSize" value="30"/>
	    <property name="borrowConnectionTimeout" value="60"/>
	    <property name="reapTimeout" value="20"/>
	    <!-- 最大空闲时间 -->
	    <property name="maxIdleTime" value="60"/>
	    <property name="maintenanceInterval" value="60" />
	    <property name="loginTimeout" value="60"/>
	    <property name="logWriter" value="60"/>
	    <property name="testQuery">
	        <value>select 1</value>
	    </property>
	</bean>
	<!-- 配置datasource 数据源 -->
	<bean id="masterSource" parent="abstractXADataSource">
	    <property name="uniqueResourceName">
	        <value>master</value>
	    </property>
	    <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
	    <property name="xaProperties">
	        <props>
	            <prop key="user">${mysql.username}</prop>
	            <prop key="password">${mysql.password}</prop>
	            <prop key="URL">${mysql.url}</prop>
	        </props>
	    </property>
	</bean>
    <bean id="slaveSource" parent="abstractXADataSource">
	    <property name="uniqueResourceName">
	        <value>slave</value>
	    </property>
	    <property name="xaDataSourceClassName">
	        <value>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</value>
	    </property>
	    <property name="xaProperties">
	        <props>
	            <prop key="user">${oracle.username}</prop>
	            <prop key="password">${oracle.password}</prop>
	            <prop key="URL">${oracle.url}</prop>
	        </props>
	    </property>
	</bean>

	<!-- JdbcTemplate -->
    <bean id="masterJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="masterSource" />
    </bean>
    
    <bean id="slaveJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="slaveSource" />
    </bean>	
	
	
	<!-- jta配置 -->
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
	    <property name="transactionTimeout" value="300" />
	</bean>
	
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
	      init-method="init" destroy-method="close">
	    <property name="forceShutdown">
	        <value>true</value>
	    </property>
	</bean>
	
	<bean id="springTransactionManager"
	      class="org.springframework.transaction.jta.JtaTransactionManager">
	    <property name="transactionManager">
	        <ref bean="atomikosTransactionManager" />
	    </property>
	    <property name="userTransaction">
	        <ref bean="atomikosUserTransaction" />
	    </property>
	</bean>
	<!-- 事务 -->
	<tx:annotation-driven transaction-manager="springTransactionManager"/>

    <aop:config>
        <aop:pointcut id="baseServiceMethods" expression="execution(* com.service.*.*(..))" />
        <aop:advisor pointcut-ref="baseServiceMethods" advice-ref="txAdvice"/>
    </aop:config>

    <!-- 配置事务的传播特性 -->
    <tx:advice id="txAdvice" transaction-manager="springTransactionManager">
        <tx:attributes>
            <tx:method name="query*" propagation="REQUIRED" read-only="true" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true" />
            <tx:method name="find*" propagation="REQUIRED" read-only="true" />
            <tx:method name="list*" propagation="REQUIRED" read-only="true" />
            <tx:method name="count*" propagation="REQUIRED" read-only="true" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="del*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="enable*" propagation="REQUIRED" />                
            <tx:method name="upload*" propagation="REQUIRED" />                
        </tx:attributes>
    </tx:advice>
</beans>